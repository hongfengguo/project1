赵旭
zhaoxu@tedu.cn

WEB 服务器端

Flask 轻量级框架
AJAX  在WEB中完成异步的请求和响应
Django 重量级框架

Python WEB
1. 静态网页 和 动态网页
  1. 静态网页: 无法与服务器做动态交互的网页
     (* html,*.htm)
  2. 动态网页: 允许与服务器做动态交互的网页
2. WEB 与 服务器
  1. WEB: 网页
  2. 服务器:
    能够给用户提供服务的机器就是服务器
    1. 硬件 与 软件
      1. 硬件
        一台主机
      2. 软件
        一个能够接受用户请求并给出响应的程序
        1. APACHE
        2. TOMCAT
        3. IIS (Internet Information Service)
        4. Nginx
    2. 作用
      1. 存储WEB信息
      2. 处理用户的请求(request)和响应(response)
      3. 执行服务器端程序
      4. 具备最基本的安全功能
  3. 框架
    1. 什么是框架
      框架是一个为了解决开放性问题而存在的一种程序结构
      框架本身提供了最基本的一些功能
      我们只需要在基本的功能上搭建自己的操作就可以了
    2. Python Web 框架
      1. Flask - 轻量级
      2. Webpy - 轻量级
      3. Tornado - 异步框架
      4. Django - 重量级
    3. 框架模式
      1. MTV
        M: Models模型层,主要负责数据库建模
        T: Templates,模板层,处理用户的显示内容
          如: html
        V: Views,视图层,处理与用户打交道的内容,即请求和响应的处理
      2. MVC
        M: Models模型层,负责数据库的建模
        V: Views,视图层,处理用户的显示内容(html)
        C: Controller,控制层,处理与用户交互相关内容

        M --- M 
        V --- T 
        C --- V 

4. IDE - PyCharm
5. Flask框架
  1. 什么是Flask
    Flask是一个基于python并且依赖于Jinja2模板引擎和Werkzeug WSGI 服务的一个微型框架(Micro Framework)

    WSGI: Web Server Gateway Interface
      (WEB服务网关接口)

    Flask 采用 MTV的框架模式
  2. 安装 Flask
    1. 查看已安装的Flask版本
      在python的交互模式中:
        1. import flask
          没报错:已经安装了Flask，可以继续查看版本
          报错: 没有安装
        2. flask.__version__
          查看flask的版本






















